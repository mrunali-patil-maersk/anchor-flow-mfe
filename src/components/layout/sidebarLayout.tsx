import React, { ReactNode, useMemo, useState } from "react";
import { Box, Sidebar, Breadcrumb } from "@anchor/react-components";
import { useRouter } from "next/router";
import { SidebarItemsProps } from "@anchor/react-components/dist/lib/components/Sidebar";
import { debounce } from "src/utils/utils";
import { useGetTaskCountQuery } from "src/redux/services/tasklistApi";
import { selectUser } from "src/redux/selectors/userSelector";
import { useAppSelector } from "src/redux/hook";

// constant
import { breadcrumbConstant } from "src/configs/breadcrumb.constants";

// styles
import { BreadcrumbContainer } from "@styles/layout/layout.styles";

const findMenuItem = (arr: Array<any>, path: string) =>
  arr.reduce((a, item) => {
    if (a) return a;
    if ((item.path === path || path.startsWith(item.path)) && !Array.isArray(item["subMenu"]))
      return item;
    if (Array.isArray(item["subMenu"])) return findMenuItem(item["subMenu"], path);
  }, null);

const SidebarLayout = ({
  children,
  handleToggleClick,
}: {
  children: ReactNode;
  handleToggleClick;
}) => {
  const router = useRouter();
  const { email, groups } = useAppSelector(selectUser);
  const [isExpanded, setIsExpanded] = useState(true);

  const groupIds = useMemo(
    () => (email ? groups?.map((group) => group.id).join(",") : undefined),
    [groups, email]
  );

  const {
    data: { count: allTaskCount } = {
      count: 0,
    },
  } = useGetTaskCountQuery(
    {},
    {
      skip: !email,
    }
  );

  const {
    data: { count: myTaskCount } = {
      count: 0,
    },
  } = useGetTaskCountQuery(
    { assignee: email },
    {
      skip: !email,
    }
  );

  const {
    data: { count: myGroupTaskCount } = {
      count: 0,
    },
  } = useGetTaskCountQuery(
    { groupId: groupIds },
    {
      skip: !email,
    }
  );

  const sideBarMenu: Array<SidebarItemsProps> = [
    {
      id: "dashboard",
      icon: (
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M4 3H9C9.55228 3 10 3.44772 10 4V7C10 7.55228 9.55228 8 9 8H4C3.44772 8 3 7.55228 3 7V4C3 3.44772 3.44772 3 4 3ZM2 4C2 2.89543 2.89543 2 4 2H9C10.1046 2 11 2.89543 11 4V7C11 8.10457 10.1046 9 9 9H4C2.89543 9 2 8.10457 2 7V4ZM15 17H20C20.5523 17 21 17.4477 21 18V20C21 20.5523 20.5523 21 20 21H15C14.4477 21 14 20.5523 14 20V18C14 17.4477 14.4477 17 15 17ZM13 18C13 16.8954 13.8954 16 15 16H20C21.1046 16 22 16.8954 22 18V20C22 21.1046 21.1046 22 20 22H15C13.8954 22 13 21.1046 13 20V18ZM20 3H15C14.4477 3 14 3.44772 14 4V12C14 12.5523 14.4477 13 15 13H20C20.5523 13 21 12.5523 21 12V4C21 3.44772 20.5523 3 20 3ZM15 2C13.8954 2 13 2.89543 13 4V12C13 13.1046 13.8954 14 15 14H20C21.1046 14 22 13.1046 22 12V4C22 2.89543 21.1046 2 20 2H15ZM4 12H9C9.55228 12 10 12.4477 10 13V20C10 20.5523 9.55228 21 9 21H4C3.44772 21 3 20.5523 3 20V13C3 12.4477 3.44772 12 4 12ZM2 13C2 11.8954 2.89543 11 4 11H9C10.1046 11 11 11.8954 11 13V20C11 21.1046 10.1046 22 9 22H4C2.89543 22 2 21.1046 2 20V13Z"
            fill="#353535"
          />
        </svg>
      ),
      title: "Dashboard",
      path: "/dashboard",
    },
    {
      id: "tasklist",
      icon: "clipboard-check-text",
      title: "Tasklist",
      path: "/tasklist",
      subMenu: [
        {
          id: "my_task",
          title: `My task (${myTaskCount})`,
          path: "/tasklist/my_task",
        },
        {
          id: "my_group_task",
          title: `My group task (${myGroupTaskCount})`,
          path: "/tasklist/my_group_task",
        },
        {
          id: "all_task",
          title: `All task (${allTaskCount})`,
          path: "/tasklist/all_task",
        },
      ],
    },
    {
      id: "admin",
      icon: "user-circle",
      title: "Admin",
      path: "/admin",
      subMenu: [
        {
          id: "groups",
          icon: "",
          title: "Groups",
          path: "/groups",
        },
      ],
    },
    {
      id: "create-workflow",
      icon: (
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M10.4 3H3V10.4H10.4V3ZM3 2H2V3V10.4V11.4H3H6.1001V12.5441C3.78422 12.861 2 14.8471 2 17.25C2 19.8734 4.12665 22 6.75 22C9.37335 22 11.5 19.8734 11.5 17.25C11.5 14.8127 9.66432 12.8042 7.3001 12.5315V11.4H10.4H11.4V10.4V7.29961H12.5315C12.7831 9.48367 14.5162 11.2168 16.7002 11.4685V12.5996H13.6001H12.6001V13.5996V20.9996V21.9996H13.6001H21.0001H22.0001V20.9996V13.5996V12.5996H21.0001H17.9002V11.4559C20.2159 11.1389 22 9.15279 22 6.75C22 4.12665 19.8734 2 17.25 2C14.8473 2 12.8612 3.78397 12.5442 6.09961H11.4V3V2H10.4H3ZM21.0001 13.5996H13.6001V20.9996H21.0001V13.5996ZM6.75 21C8.82107 21 10.5 19.3211 10.5 17.25C10.5 15.1789 8.82107 13.5 6.75 13.5C4.67893 13.5 3 15.1789 3 17.25C3 19.3211 4.67893 21 6.75 21ZM21 6.75C21 8.82107 19.3211 10.5 17.25 10.5C15.1789 10.5 13.5 8.82107 13.5 6.75C13.5 4.67893 15.1789 3 17.25 3C19.3211 3 21 4.67893 21 6.75Z"
            fill="#353535"
          />
        </svg>
      ),
      title: "Create Workflow",
      path: "/create-workflow",
      subMenu: [
        {
          id: "bpmn",
          icon: "clipboard-check-text",
          title: "BPMN diagram",
          path: "/create-workflow/bpmn?deploymentId=default&resourceId=default",
        },
        {
          id: "dmn",
          icon: "clipboard-check-text",
          title: "DMN diagram",
          path: "/create-workflow/dmn?deploymentId=default",
        },
        {
          id: "form",
          icon: "clipboard-check-text",
          title: "Form",
          path: "/create-workflow/form",
        },
      ],
    },
    {
      id: "process",
      icon: (
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M11.0001 1.70714L10.1465 0.853591L10.8536 0.146484L11.7072 1.00004C11.8947 1.18757 12.0001 1.44193 12.0001 1.70714V3.29293C12.0001 3.55815 11.8947 3.8125 11.7072 4.00004L10.8536 4.85359L10.1465 4.14648L11.0001 3.29293V3.05493C9.07789 3.2673 7.33831 4.08495 5.97533 5.31394L5.30567 4.57127C6.84528 3.18301 8.81976 2.26603 11.0001 2.04945V1.70714ZM21.0001 12C21.0001 7.68005 17.9559 4.06992 13.8953 3.19984L14.1048 2.22203C18.6169 3.18885 22.0001 7.19878 22.0001 12C22.0001 17.5229 17.5229 22 12.0001 22V22.2929L12.8536 23.1465L12.1465 23.8536L11.293 23C11.1054 22.8125 11.0001 22.5581 11.0001 22.2929V20.7071C11.0001 20.4419 11.1054 20.1876 11.293 20L12.1465 19.1465L12.8536 19.8536L12.0001 20.7071V21C16.9706 21 21.0001 16.9706 21.0001 12ZM5.30565 5.98454C3.9703 7.46957 3.12257 9.40002 3.01233 11.5259L2.01367 11.4741C2.1362 9.11124 3.07915 6.96503 4.56206 5.3159L5.30565 5.98454ZM3.01233 12.4741C3.12257 14.6001 3.9703 16.5305 5.30565 18.0155L4.56206 18.6842C3.07915 17.035 2.1362 14.8888 2.01367 12.5259L3.01233 12.4741ZM5.97533 18.6861C6.88716 19.5083 7.96753 20.1463 9.15784 20.5422L8.84228 21.4911C7.51844 21.0508 6.31804 20.3417 5.30567 19.4288L5.97533 18.6861Z"
            fill="#353535"
          />
          <mask
            id="path-2-outside-1_3361_10808"
            maskUnits="userSpaceOnUse"
            x="5"
            y="5"
            width="14"
            height="14"
            fill="black"
          >
            <rect fill="white" x="5" y="5" width="14" height="14" />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M10.4589 6.47763C10.5197 6.1994 10.7771 6 11.0753 6H12.9247C13.2229 6 13.4803 6.1994 13.5411 6.47763L13.8415 7.8516L13.8426 7.8531C13.8441 7.85483 13.8472 7.85729 13.8518 7.85919C14.2043 8.00247 14.5346 8.18535 14.8367 8.40189C14.8407 8.40476 14.8444 8.40598 14.8467 8.40638L14.8486 8.40654L16.2486 7.96712C16.5319 7.8782 16.8418 7.99087 16.991 8.23699L17.9156 9.76303C18.0648 10.0092 18.0122 10.3212 17.7897 10.5105L16.6905 11.446L16.6897 11.4476C16.6889 11.4497 16.6881 11.4534 16.6888 11.4582C16.7112 11.6359 16.7227 11.8167 16.7227 12C16.7227 12.1832 16.7112 12.3641 16.6888 12.5419C16.6881 12.5466 16.6889 12.5503 16.6897 12.5524L16.6905 12.554L17.7897 13.4894C18.0122 13.6788 18.0648 13.9909 17.9156 14.237L16.991 15.763C16.8418 16.0091 16.5319 16.1218 16.2486 16.0329L14.8486 15.5935L14.8467 15.5936C14.8444 15.594 14.8407 15.5953 14.8367 15.5981C14.5346 15.8147 14.2043 15.9975 13.8518 16.1408C13.8472 16.1427 13.8441 16.1452 13.8426 16.1469L13.8415 16.1484L13.5411 17.5224C13.4803 17.8006 13.2229 18 12.9247 18H11.0753C10.7771 18 10.5197 17.8006 10.4589 17.5224L10.1585 16.1484L10.1574 16.1469C10.1558 16.1452 10.1529 16.1427 10.1482 16.1408C9.79575 15.9976 9.46542 15.8147 9.16335 15.5981C9.15935 15.5953 9.15566 15.5941 9.15333 15.5936L9.15144 15.5935L7.75138 16.0329C7.46808 16.1218 7.15818 16.0091 7.00905 15.763L6.08439 14.237C5.93525 13.9909 5.9878 13.6788 6.21027 13.4895L7.30949 12.554L7.31029 12.5524C7.3111 12.5503 7.31184 12.5466 7.31124 12.5419C7.28883 12.3641 7.27732 12.1833 7.27732 12C7.27732 11.8167 7.28883 11.6359 7.31124 11.4581C7.31184 11.4534 7.3111 11.4497 7.31029 11.4476L7.30949 11.4459L6.21027 10.5105C5.98781 10.3212 5.93526 10.0091 6.08439 9.763L7.00905 8.23697C7.15818 7.99084 7.46809 7.87817 7.75138 7.96709L9.15144 8.40652L9.15334 8.40636C9.15566 8.40596 9.15935 8.40474 9.16335 8.40187C9.46542 8.18534 9.79575 8.00246 10.1482 7.85919C10.1529 7.85729 10.1558 7.85483 10.1574 7.8531L10.1585 7.8516L10.4589 6.47763ZM12.9247 6.6H11.0753L10.7749 7.97414C10.7306 8.17657 10.5824 8.33498 10.3953 8.41106C10.0901 8.53513 9.80386 8.69356 9.54191 8.88134C9.37912 8.99803 9.16083 9.04118 8.9546 8.97645L7.55438 8.53697L6.62972 10.063L7.72907 10.9985C7.89072 11.1361 7.96068 11.3373 7.93644 11.5297C7.91702 11.6837 7.90701 11.8407 7.90701 12C7.90701 12.1593 7.91702 12.3163 7.93644 12.4703C7.96068 12.6626 7.89072 12.8639 7.72906 13.0015L6.62972 13.937L7.55437 15.463L8.9546 15.0236C9.16083 14.9588 9.37912 15.002 9.5419 15.1187C9.80386 15.3064 10.0901 15.4649 10.3953 15.589C10.5824 15.665 10.7306 15.8234 10.7749 16.0259L11.0753 17.4H12.9247L13.2251 16.0259C13.2694 15.8234 13.4176 15.665 13.6047 15.589C13.9099 15.4649 14.1961 15.3064 14.4581 15.1186C14.6209 15.0019 14.8392 14.9588 15.0454 15.0235L16.4456 15.463L17.3703 13.937L16.271 13.0014C16.1093 12.8639 16.0393 12.6626 16.0635 12.4703C16.083 12.3163 16.093 12.1593 16.093 12C16.093 11.8407 16.083 11.6838 16.0635 11.5297C16.0393 11.3374 16.1093 11.1361 16.271 10.9986L17.3703 10.063L16.4456 8.537L15.0454 8.97647C14.8392 9.0412 14.6209 8.99806 14.4581 8.88136C14.1961 8.69357 13.9099 8.53513 13.6047 8.41106C13.4176 8.33498 13.2694 8.17657 13.2251 7.97414L12.9247 6.6ZM12 10.2C10.9567 10.2 10.1109 11.0059 10.1109 12C10.1109 12.9941 10.9567 13.8 12 13.8C13.0433 13.8 13.8891 12.9941 13.8891 12C13.8891 11.0059 13.0433 10.2 12 10.2ZM9.48123 12C9.48123 10.6745 10.6089 9.6 12 9.6C13.3911 9.6 14.5188 10.6745 14.5188 12C14.5188 13.3255 13.3911 14.4 12 14.4C10.6089 14.4 9.48123 13.3255 9.48123 12Z"
            />
          </mask>
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M10.4589 6.47763C10.5197 6.1994 10.7771 6 11.0753 6H12.9247C13.2229 6 13.4803 6.1994 13.5411 6.47763L13.8415 7.8516L13.8426 7.8531C13.8441 7.85483 13.8472 7.85729 13.8518 7.85919C14.2043 8.00247 14.5346 8.18535 14.8367 8.40189C14.8407 8.40476 14.8444 8.40598 14.8467 8.40638L14.8486 8.40654L16.2486 7.96712C16.5319 7.8782 16.8418 7.99087 16.991 8.23699L17.9156 9.76303C18.0648 10.0092 18.0122 10.3212 17.7897 10.5105L16.6905 11.446L16.6897 11.4476C16.6889 11.4497 16.6881 11.4534 16.6888 11.4582C16.7112 11.6359 16.7227 11.8167 16.7227 12C16.7227 12.1832 16.7112 12.3641 16.6888 12.5419C16.6881 12.5466 16.6889 12.5503 16.6897 12.5524L16.6905 12.554L17.7897 13.4894C18.0122 13.6788 18.0648 13.9909 17.9156 14.237L16.991 15.763C16.8418 16.0091 16.5319 16.1218 16.2486 16.0329L14.8486 15.5935L14.8467 15.5936C14.8444 15.594 14.8407 15.5953 14.8367 15.5981C14.5346 15.8147 14.2043 15.9975 13.8518 16.1408C13.8472 16.1427 13.8441 16.1452 13.8426 16.1469L13.8415 16.1484L13.5411 17.5224C13.4803 17.8006 13.2229 18 12.9247 18H11.0753C10.7771 18 10.5197 17.8006 10.4589 17.5224L10.1585 16.1484L10.1574 16.1469C10.1558 16.1452 10.1529 16.1427 10.1482 16.1408C9.79575 15.9976 9.46542 15.8147 9.16335 15.5981C9.15935 15.5953 9.15566 15.5941 9.15333 15.5936L9.15144 15.5935L7.75138 16.0329C7.46808 16.1218 7.15818 16.0091 7.00905 15.763L6.08439 14.237C5.93525 13.9909 5.9878 13.6788 6.21027 13.4895L7.30949 12.554L7.31029 12.5524C7.3111 12.5503 7.31184 12.5466 7.31124 12.5419C7.28883 12.3641 7.27732 12.1833 7.27732 12C7.27732 11.8167 7.28883 11.6359 7.31124 11.4581C7.31184 11.4534 7.3111 11.4497 7.31029 11.4476L7.30949 11.4459L6.21027 10.5105C5.98781 10.3212 5.93526 10.0091 6.08439 9.763L7.00905 8.23697C7.15818 7.99084 7.46809 7.87817 7.75138 7.96709L9.15144 8.40652L9.15334 8.40636C9.15566 8.40596 9.15935 8.40474 9.16335 8.40187C9.46542 8.18534 9.79575 8.00246 10.1482 7.85919C10.1529 7.85729 10.1558 7.85483 10.1574 7.8531L10.1585 7.8516L10.4589 6.47763ZM12.9247 6.6H11.0753L10.7749 7.97414C10.7306 8.17657 10.5824 8.33498 10.3953 8.41106C10.0901 8.53513 9.80386 8.69356 9.54191 8.88134C9.37912 8.99803 9.16083 9.04118 8.9546 8.97645L7.55438 8.53697L6.62972 10.063L7.72907 10.9985C7.89072 11.1361 7.96068 11.3373 7.93644 11.5297C7.91702 11.6837 7.90701 11.8407 7.90701 12C7.90701 12.1593 7.91702 12.3163 7.93644 12.4703C7.96068 12.6626 7.89072 12.8639 7.72906 13.0015L6.62972 13.937L7.55437 15.463L8.9546 15.0236C9.16083 14.9588 9.37912 15.002 9.5419 15.1187C9.80386 15.3064 10.0901 15.4649 10.3953 15.589C10.5824 15.665 10.7306 15.8234 10.7749 16.0259L11.0753 17.4H12.9247L13.2251 16.0259C13.2694 15.8234 13.4176 15.665 13.6047 15.589C13.9099 15.4649 14.1961 15.3064 14.4581 15.1186C14.6209 15.0019 14.8392 14.9588 15.0454 15.0235L16.4456 15.463L17.3703 13.937L16.271 13.0014C16.1093 12.8639 16.0393 12.6626 16.0635 12.4703C16.083 12.3163 16.093 12.1593 16.093 12C16.093 11.8407 16.083 11.6838 16.0635 11.5297C16.0393 11.3374 16.1093 11.1361 16.271 10.9986L17.3703 10.063L16.4456 8.537L15.0454 8.97647C14.8392 9.0412 14.6209 8.99806 14.4581 8.88136C14.1961 8.69357 13.9099 8.53513 13.6047 8.41106C13.4176 8.33498 13.2694 8.17657 13.2251 7.97414L12.9247 6.6ZM12 10.2C10.9567 10.2 10.1109 11.0059 10.1109 12C10.1109 12.9941 10.9567 13.8 12 13.8C13.0433 13.8 13.8891 12.9941 13.8891 12C13.8891 11.0059 13.0433 10.2 12 10.2ZM9.48123 12C9.48123 10.6745 10.6089 9.6 12 9.6C13.3911 9.6 14.5188 10.6745 14.5188 12C14.5188 13.3255 13.3911 14.4 12 14.4C10.6089 14.4 9.48123 13.3255 9.48123 12Z"
            fill="#353535"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M10.4589 6.47763C10.5197 6.1994 10.7771 6 11.0753 6H12.9247C13.2229 6 13.4803 6.1994 13.5411 6.47763L13.8415 7.8516L13.8426 7.8531C13.8441 7.85483 13.8472 7.85729 13.8518 7.85919C14.2043 8.00247 14.5346 8.18535 14.8367 8.40189C14.8407 8.40476 14.8444 8.40598 14.8467 8.40638L14.8486 8.40654L16.2486 7.96712C16.5319 7.8782 16.8418 7.99087 16.991 8.23699L17.9156 9.76303C18.0648 10.0092 18.0122 10.3212 17.7897 10.5105L16.6905 11.446L16.6897 11.4476C16.6889 11.4497 16.6881 11.4534 16.6888 11.4582C16.7112 11.6359 16.7227 11.8167 16.7227 12C16.7227 12.1832 16.7112 12.3641 16.6888 12.5419C16.6881 12.5466 16.6889 12.5503 16.6897 12.5524L16.6905 12.554L17.7897 13.4894C18.0122 13.6788 18.0648 13.9909 17.9156 14.237L16.991 15.763C16.8418 16.0091 16.5319 16.1218 16.2486 16.0329L14.8486 15.5935L14.8467 15.5936C14.8444 15.594 14.8407 15.5953 14.8367 15.5981C14.5346 15.8147 14.2043 15.9975 13.8518 16.1408C13.8472 16.1427 13.8441 16.1452 13.8426 16.1469L13.8415 16.1484L13.5411 17.5224C13.4803 17.8006 13.2229 18 12.9247 18H11.0753C10.7771 18 10.5197 17.8006 10.4589 17.5224L10.1585 16.1484L10.1574 16.1469C10.1558 16.1452 10.1529 16.1427 10.1482 16.1408C9.79575 15.9976 9.46542 15.8147 9.16335 15.5981C9.15935 15.5953 9.15566 15.5941 9.15333 15.5936L9.15144 15.5935L7.75138 16.0329C7.46808 16.1218 7.15818 16.0091 7.00905 15.763L6.08439 14.237C5.93525 13.9909 5.9878 13.6788 6.21027 13.4895L7.30949 12.554L7.31029 12.5524C7.3111 12.5503 7.31184 12.5466 7.31124 12.5419C7.28883 12.3641 7.27732 12.1833 7.27732 12C7.27732 11.8167 7.28883 11.6359 7.31124 11.4581C7.31184 11.4534 7.3111 11.4497 7.31029 11.4476L7.30949 11.4459L6.21027 10.5105C5.98781 10.3212 5.93526 10.0091 6.08439 9.763L7.00905 8.23697C7.15818 7.99084 7.46809 7.87817 7.75138 7.96709L9.15144 8.40652L9.15334 8.40636C9.15566 8.40596 9.15935 8.40474 9.16335 8.40187C9.46542 8.18534 9.79575 8.00246 10.1482 7.85919C10.1529 7.85729 10.1558 7.85483 10.1574 7.8531L10.1585 7.8516L10.4589 6.47763ZM12.9247 6.6H11.0753L10.7749 7.97414C10.7306 8.17657 10.5824 8.33498 10.3953 8.41106C10.0901 8.53513 9.80386 8.69356 9.54191 8.88134C9.37912 8.99803 9.16083 9.04118 8.9546 8.97645L7.55438 8.53697L6.62972 10.063L7.72907 10.9985C7.89072 11.1361 7.96068 11.3373 7.93644 11.5297C7.91702 11.6837 7.90701 11.8407 7.90701 12C7.90701 12.1593 7.91702 12.3163 7.93644 12.4703C7.96068 12.6626 7.89072 12.8639 7.72906 13.0015L6.62972 13.937L7.55437 15.463L8.9546 15.0236C9.16083 14.9588 9.37912 15.002 9.5419 15.1187C9.80386 15.3064 10.0901 15.4649 10.3953 15.589C10.5824 15.665 10.7306 15.8234 10.7749 16.0259L11.0753 17.4H12.9247L13.2251 16.0259C13.2694 15.8234 13.4176 15.665 13.6047 15.589C13.9099 15.4649 14.1961 15.3064 14.4581 15.1186C14.6209 15.0019 14.8392 14.9588 15.0454 15.0235L16.4456 15.463L17.3703 13.937L16.271 13.0014C16.1093 12.8639 16.0393 12.6626 16.0635 12.4703C16.083 12.3163 16.093 12.1593 16.093 12C16.093 11.8407 16.083 11.6838 16.0635 11.5297C16.0393 11.3374 16.1093 11.1361 16.271 10.9986L17.3703 10.063L16.4456 8.537L15.0454 8.97647C14.8392 9.0412 14.6209 8.99806 14.4581 8.88136C14.1961 8.69357 13.9099 8.53513 13.6047 8.41106C13.4176 8.33498 13.2694 8.17657 13.2251 7.97414L12.9247 6.6ZM12 10.2C10.9567 10.2 10.1109 11.0059 10.1109 12C10.1109 12.9941 10.9567 13.8 12 13.8C13.0433 13.8 13.8891 12.9941 13.8891 12C13.8891 11.0059 13.0433 10.2 12 10.2ZM9.48123 12C9.48123 10.6745 10.6089 9.6 12 9.6C13.3911 9.6 14.5188 10.6745 14.5188 12C14.5188 13.3255 13.3911 14.4 12 14.4C10.6089 14.4 9.48123 13.3255 9.48123 12Z"
            stroke="#353535"
            strokeWidth="0.4"
            mask="url(#path-2-outside-1_3361_10808)"
          />
        </svg>
      ),
      title: "Definitions",
      path: "/process",
      subMenu: [
        {
          id: "process_definitions",
          icon: "clipboard-check-text",
          title: "Processes",
          path: "/process/process-definitions",
        },
        {
          id: "decision_definitions",
          icon: "clipboard-check-text",
          title: "Decisions",
          path: "/decision/decision-definitions",
        },
        {
          id: "forms",
          title: "Forms",
          path: "/forms",
        },
        {
          id: "deployments",
          icon: "clipboard-check-text",
          title: "Deployments",
          path: "/process/deployments",
        },
      ],
    },
  ];

  const activeNav = useMemo(() => {
    // @Todo create-workflow path should match
    const activeNavObj =
      findMenuItem(sideBarMenu, router.pathname) || findMenuItem(sideBarMenu, router.asPath);
    const routerPathValidation = router.pathname === "/my-profile";

    if (routerPathValidation) return;
    const path = router.pathname || router.asPath;
    if (!activeNavObj && path === "/") {
      router.push(sideBarMenu[0].path);
    }
    return activeNavObj?.id ?? sideBarMenu[0].id;
  }, [sideBarMenu, router, router.pathname]);

  const handleNavClick = (navUrlPath: string) => {
    try {
      let path = navUrlPath;
      // Todo
      if (navUrlPath === "/process/process-definitions/details") {
        path = `/process/process-definitions/details?id=${router.query.id}`;
      }
      router.push(path);
    } catch (err) {
      console.error(err);
    }
  };

  const handleToggle = (isExpanded) => {
    setIsExpanded(isExpanded);
    handleToggleClick(isExpanded);
  };

  const handleToggleDebounce = debounce((isExpanded) => handleToggle(isExpanded), 500);

  const activePage = useMemo(() => {
    const activeNavObj = findMenuItem(sideBarMenu, router.asPath);
    const routerPathValidation =
      router.pathname === "/my-profile" || router.pathname === "/dashboard";
    if (routerPathValidation) return;
    // TODO
    if (router.pathname === "/process/process-definitions/details") {
      return "process_definitions_details";
    }
    if (router.pathname === "/process/process-definitions/details/process-instance") {
      return "process_instance_details";
    }
    if (router.pathname === "/decision/decision-definitions/details") {
      return "decision_definitions_details";
    }
    if (router.pathname === "/groups/[groupId]/members") {
      return "groups_members";
    }
    if (router.pathname === "/forms/details") {
      return "forms_details";
    }
    const path = router.pathname || router.asPath;
    if (!activeNavObj && path === "/") {
      router.push(sideBarMenu[0].path);
    }
    return activeNavObj?.id ?? sideBarMenu[0].id;
  }, [sideBarMenu, router, router.pathname]);

  return (
    <Box display="flex">
      <Box flexShrink="0" width={isExpanded ? 270 : 64} zIndex="99999">
        <Sidebar
          items={sideBarMenu}
          activeNav={activeNav}
          isExpanded={isExpanded}
          onToggle={(isExpanded) => handleToggleDebounce(isExpanded)}
          onNavClick={handleNavClick}
        />
      </Box>
      <Box
        display="flex"
        flex="1"
        flexDirection="column"
        overflow="hidden"
        height="calc(100vh - 72px)"
        bg="functional.grey.100"
        overflowY="auto"
      >
        {activePage && (
          <BreadcrumbContainer>
            <Breadcrumb
              activeItem={activePage}
              mainObject={breadcrumbConstant}
              separator="/"
              onBreadcrumbClick={(item) => handleNavClick(item.path)}
            />
          </BreadcrumbContainer>
        )}
        <Box>{children}</Box>
      </Box>
    </Box>
  );
};

export default SidebarLayout;
